<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Telnet on My hardware</title>
    <link>http://myhw.ru/tags/telnet/</link>
    <description>Recent content in Telnet on My hardware</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 15 Mar 2016 11:59:38 +0300</lastBuildDate>
    <atom:link href="http://myhw.ru/tags/telnet/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Прошивка ESP-Link</title>
      <link>http://myhw.ru/post/esp-link-flash/</link>
      <pubDate>Tue, 15 Mar 2016 11:59:38 +0300</pubDate>
      
      <guid>http://myhw.ru/post/esp-link-flash/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/jeelabs/esp-link&#34;&gt;ESP-Link&lt;/a&gt; - это WiFi-Serial мост на базе SoC ESP8266.
Кроме моста имеются дополнительные плюшки как то:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Отправка REST запросов.&lt;/li&gt;
&lt;li&gt;Клиент MQTT протокола.&lt;/li&gt;
&lt;li&gt;Программатор AVR и LPC микроконтроллеров, а так же других модулей ESP8266 (по последовательному порту).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В данный момент стабильной является прошивка версии &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases/tag/v2.1.7&#34;&gt;2.1.7&lt;/a&gt;
и самым простым вариантом установки будет взять собранные бинарные файлы и прошить их в модуль.&lt;/p&gt;

&lt;p&gt;Поддерживаются как модули с 512 Кбайт флеш-памяти (например ESP-01, ESP-07) так и модули с 4 Мбайт флеш-памяти (например ESP-12).&lt;/p&gt;

&lt;p&gt;В общем и целом, ограничений на типы модулей нет, ESP-Link успешно конфигурируется под разные GPIO через Web-интерфейс.&lt;/p&gt;

&lt;h2 id=&#34;прошивка:82672e092b5545a43cc956b57c90b7a6&#34;&gt;Прошивка&lt;/h2&gt;

&lt;p&gt;Для прошивки нам потребуется утилита &lt;a href=&#34;https://github.com/themadinventor/esptool&#34;&gt;ESPTool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Для себя я не стал её инсталлировать в систему, а просто скопировал &lt;a href=&#34;https://github.com/themadinventor/esptool/blob/master/esptool.py&#34;&gt;esptool.py&lt;/a&gt;
в &lt;code&gt;~/bin&lt;/code&gt;, а библиотеку &lt;a href=&#34;https://github.com/pyserial/pyserial&#34;&gt;pyserial&lt;/a&gt; поставил через пакетный менеджер дистрибутива.&lt;/p&gt;

&lt;p&gt;На &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases&#34;&gt;странице релизов&lt;/a&gt; скачиваем
последнюю &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases/tag/v2.1.7&#34;&gt;стабильную прошивку&lt;/a&gt;
или &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases/tag/v2.2.beta2&#34;&gt;бету&lt;/a&gt;, если есть желание поэкспериментировать.&lt;/p&gt;

&lt;p&gt;Распаковываем полученный файл:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xzvf esp-link-v2.1.7.tgz
cd esp-link-v2.1.7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Подключаем прошиваемый модуль к компьютеру через Usb-TTLSerial переходник. Следует помнить, что выходы TX-RX
переходника должны выдавать напряжение от 0 до 3.3 вольт. Переходники с напряжением 5 вольт, могут безвозвратно
повредить модуль.&lt;/p&gt;

&lt;p&gt;Для нормальной работы модуля вывод &lt;code&gt;CH_PD&lt;/code&gt; должен быть подтянут к питанию через резистор 1-10 Ком,
вывод &lt;code&gt;GPIO15&lt;/code&gt; должен быть подтянут к земле через резистор 1-10 Ком.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://myhw.ru/img/esp/ESP_min.png&#34; alt=&#34;ESP&#34; /&gt; &lt;a href=&#34;http://esp8266.github.io/Arduino/versions/2.1.0-rc2/doc/boards.html#minimal&#34;&gt;Minimal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Для входа в режим программирования следует подтянуть выход &lt;code&gt;GPIO0&lt;/code&gt; к земле через резистор 1-10 Ком,
и произвести сброс контроллера кратковременной подачей низкого уровня на вход &lt;code&gt;RESET&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;После этого модуль готов к прошивке.&lt;/p&gt;

&lt;p&gt;Для версии с 4 Мбайтами флеш-памяти выполняем команду:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash -fs 32m -ff 80m \
    0x00000 boot_v1.4\(b1\).bin 0x1000 user1.bin 0x3FE000 blank.bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для версии с 512 Кбайтами флеш-памяти выполняем команду:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash -fs 4m -ff 40m \
    0x00000 boot_v1.4\(b1\).bin 0x1000 user1.bin 0x7E000 blank.bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если возникли проблемы в процессе прошивки то можно попробовать снизить скорость обмена по последовательному порту &lt;code&gt;--baud 115200&lt;/code&gt;
и/или скорость обмена с SPI-flash &lt;code&gt;-ff 20m&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;После успешной прошивки модуль доступен по сети WiFi как точка доступа.&lt;/p&gt;

&lt;p&gt;Если ранее модуль уже был прошит как esp-link, то обновление прошивки можно провести по воздуху:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./wiflash &amp;lt;esp-hostname&amp;gt; user1.bin user2.bin
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>