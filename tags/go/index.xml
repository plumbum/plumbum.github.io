<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My hardware</title>
    <link>http://myhw.ru/tags/go/index.xml</link>
    <description>Recent content on My hardware</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <atom:link href="http://myhw.ru/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>EmGo</title>
      <link>http://myhw.ru/post/emgo/</link>
      <pubDate>Mon, 14 Mar 2016 11:25:34 +0300</pubDate>
      
      <guid>http://myhw.ru/post/emgo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/ziutek/emgo&#34;&gt;EmGo&lt;/a&gt; - язык для программирования микроконтроллеров с Go-синтаксисом.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;установка&#34;&gt;Установка&lt;/h2&gt;

&lt;p&gt;Для установки нам потребуется &lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go версии 1.6+&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Получаем код:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go get -u -v github.com/ziutek/emgo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Устанавливаем компилятор&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go install -v github.com/ziutek/emgo/egc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Прописываем пременные окружения:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export EGCC=/usr/local/arm/gcc-arm-none-eabi/bin/arm-none-eabi-gcc
export EGLD=/usr/local/arm/gcc-arm-none-eabi/bin/arm-none-eabi-ld
export EGAR=/usr/local/arm/gcc-arm-none-eabi/bin/arm-none-eabi-ar

export EGROOT=$HOME/go/src/github.com/ziutek/emgo/egroot
export EGPATH=$HOME/go/src/github.com/ziutek/emgo/egpath
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для сборки бинарного файла egc использует gcc тулчейн. Можно взять например этот &lt;a href=&#34;https://launchpad.net/gcc-arm-embedded&#34;&gt;GCC ARM Embedded&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Я обычно распаковываю его как есть в &lt;code&gt;/usr/local/arm&lt;/code&gt; и делаю симлинк:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/arm
sudo tar xvf ~/Downloads/gcc-arm-none-eabi-5_2-2015q4-20151219-linux.tar.bz2
sudo ln -s gcc-arm-none-eabi-5_2-2015q4 gcc-arm-none-eabi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Так же нужно установить &lt;code&gt;OpenOCD&lt;/code&gt;, если он ещё не установлен:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install openocd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Или можно использовать тулзу &lt;a href=&#34;https://github.com/texane/stlink&#34;&gt;StLink&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;прошивка-тестового-примера&#34;&gt;Прошивка тестового примера&lt;/h2&gt;

&lt;p&gt;После этого, можно отправится к примерам. Из коробки поддерживается демоборда &lt;code&gt;F4 Discovery&lt;/code&gt;, которая у меня была под рукоу.&lt;/p&gt;

&lt;p&gt;Сразу возьмём что нибудь по-нагляднее &lt;del&gt;с блекджеком и&amp;hellip;&lt;/del&gt; т.е. с каналами и горутинами:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd $EGPATH/src/stm32/examples/f4-discovery/channels
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Мне не удалось запустить приложение из RAM, поэтому я отредактировал &lt;code&gt;script.ld&lt;/code&gt; и заменил строчку&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INCLUDE stm32/loadram
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;на&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INCLUDE stm32/loadflash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь собираем наше приложение:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;../build.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если копиляция прошла успешно, получили бинарник в elf-е &lt;code&gt;cortexm4f.elf&lt;/code&gt;. Прошиваем его в демоплату через OpenOCD:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;../load-oocd.sh flash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Бинго! Плата начинает нам весело подмигивать всеми четырьмя светодиодами.&lt;/p&gt;

&lt;h2 id=&#34;что-дальше&#34;&gt;Что дальше?&lt;/h2&gt;

&lt;p&gt;Дальше изучать &lt;a href=&#34;https://github.com/ziutek/emgo/tree/master/egpath/src/stm32/examples&#34;&gt;примеры&lt;/a&gt;, читать &lt;a href=&#34;https://sites.google.com/site/embeddedgo/&#34;&gt;документацию&lt;/a&gt; (пока она весьма условна), писать собственные приложения.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Генератор сайтов Hugo</title>
      <link>http://myhw.ru/post/hugo/</link>
      <pubDate>Tue, 16 Feb 2016 13:18:37 +0300</pubDate>
      
      <guid>http://myhw.ru/post/hugo/</guid>
      <description>&lt;p&gt;Hugo - генератор статичных сайтов  подбный &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; и написанный на языке программирования &lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;документация&#34;&gt;Документация&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/overview/installing/&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Быстрый старт&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;Размещение на Github Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Темы оформления&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/go-templates/&#34;&gt;Шаблоны страниц&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/variables/&#34;&gt;Переменные шаблонов&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Для успешной работы надо ознакомится с &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;markdown форматированием&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;подстветка&#34;&gt;Подстветка&lt;/h2&gt;

&lt;p&gt;Hugo позволяет &lt;a href=&#34;https://gohugo.io/extras/highlighting/&#34;&gt;подсвечивать код&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #a6e22e&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;

&lt;p&gt;Метатег &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt; отрезает текст и вставляет ссылку &amp;ldquo;Read more&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>