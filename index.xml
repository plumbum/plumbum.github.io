<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My hardware</title>
    <link>http://myhw.ru/index.xml</link>
    <description>Recent content on My hardware</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Tue, 03 Jan 2017 10:50:00 +0300</lastBuildDate>
    <atom:link href="http://myhw.ru/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Консоль и терминал</title>
      <link>http://myhw.ru/post/terminal_tips/</link>
      <pubDate>Tue, 03 Jan 2017 10:50:00 +0300</pubDate>
      
      <guid>http://myhw.ru/post/terminal_tips/</guid>
      <description>&lt;p&gt;Удобная работа в терминале Linux.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;работа-с-датой&#34;&gt;Работа с датой&lt;/h2&gt;

&lt;p&gt;Текущая дата в &lt;em&gt;unixtime&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;date +%s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Произвольна дата в &lt;em&gt;unixtime&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;date --date=&amp;quot;2010-04-05 00:22:46&amp;quot; +%s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ключик &lt;code&gt;--date&lt;/code&gt; так же может принимать относительные даты:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;date --date=&amp;quot;friday&amp;quot;
date --date=&amp;quot;last friday&amp;quot;
date --date=&amp;quot;week&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;С его же помощью можно &amp;ldquo;расшифровать&amp;rdquo; &lt;em&gt;unixtime&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;date --date=&#39;@2147483647&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Напечатать календарь в консоли можно с помощью команд:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cal
ncal
ncal -3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;клавиатурные-сочетания&#34;&gt;Клавиатурные сочетания&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Действие&lt;/th&gt;
&lt;th&gt;Команда&lt;/th&gt;
&lt;th&gt;Сочетание&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Начало строки&lt;/td&gt;
&lt;td&gt;Home&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;a&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Конец строки&lt;/td&gt;
&lt;td&gt;End&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;e&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Один символ вперед&lt;/td&gt;
&lt;td&gt;Right Arrow&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Один символ назад&lt;/td&gt;
&lt;td&gt;Left Arrow&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Удалить символ под курсором&lt;/td&gt;
&lt;td&gt;Delete&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;d&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Удалить символ перед курсором&lt;/td&gt;
&lt;td&gt;Backspace&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;h&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Предыдущая команда в истории&lt;/td&gt;
&lt;td&gt;Up Arrow&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;p&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Следующая команда в истории&lt;/td&gt;
&lt;td&gt;Down Arrow&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;n&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ввод команды&lt;/td&gt;
&lt;td&gt;Enter&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;j&lt;/code&gt; или &lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;m&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;На одно слово назад&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Meta&lt;/code&gt;-&lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;На одно слово вперёд&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Meta&lt;/code&gt;-&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Вырезать предыдущее слово&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;w&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Вырезать все к концу строки&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;k&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Вырезать все к началу строки&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;u&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Вставить вырезанное ранее&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;y&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Откатить изменение&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;_&lt;/code&gt; (Ctrl+Shift+-)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Очистить экран&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;l&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Поменять местами два символа&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;-&lt;code&gt;t&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;Ctrl-&lt;/code&gt; = hold control, &lt;code&gt;meta-&lt;/code&gt; = hold meta (where meta is usually the &lt;strong&gt;alt&lt;/strong&gt; or &lt;strong&gt;escape&lt;/strong&gt; key).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://habrahabr.ru/post/266933/&#34;&gt;источник&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Atom&#43;PlatformIO</title>
      <link>http://myhw.ru/post/atom&#43;platformio/</link>
      <pubDate>Mon, 26 Dec 2016 22:28:30 +0300</pubDate>
      
      <guid>http://myhw.ru/post/atom&#43;platformio/</guid>
      <description>&lt;p&gt;Среду разработки для Arduino сложно назвать полноценной средой разработки
по соверменным меркам. Хотя она и содержит в своём составе средства
для управления библиотеками и платформами используемый в ней редактор исходных
кодов очень слаб, да и управление проектами по сути отсутствует.&lt;/p&gt;

&lt;p&gt;На выручку нам приходит &lt;a href=&#34;http://platformio.org/&#34;&gt;PlatformIO&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;По сути это набор утилит командной строки позволяющих управлять проектами,
библиотеками, сборкой и деплоем в готовые устройства.&lt;/p&gt;

&lt;p&gt;Для удобной работы с исходным кодом среда может быть интегрирована в различные
редакторы и IDE, а на базе редактора &lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt; создана
собственная &lt;a href=&#34;http://platformio.org/platformio-ide&#34;&gt;IDE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;На самом деле в &lt;em&gt;Atom&lt;/em&gt; среда интегрируется посредством пакета, так что
тот же самый функционал можно получить не ставя &lt;em&gt;PlatformIO IDE&lt;/em&gt;, а установив
нужный пакет в &lt;em&gt;Atom&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;На мой взгляд вариант с установкой пакета имеет то преимущество, что версии
оригинального &lt;em&gt;Atom&lt;/em&gt; новее версий &lt;em&gt;Atom-а&lt;/em&gt; входящего в состав &lt;em&gt;PlatformIO IDE&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;atom&#34;&gt;Atom&lt;/h2&gt;

&lt;p&gt;Ставим редактор &lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Тут никаких сложностей, просто качаем и устанавливаем пакет для своей системы.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmagXg7Y11R1dPbtXby3W1tYSddkAudHKwfQ12rUqH6hSU/atom_welcome.png&#34; alt=&#34;Welcome atom&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;vim-mode&#34;&gt;Vim mode&lt;/h2&gt;

&lt;p&gt;Для vim-еров ставим &lt;a href=&#34;https://atom.io/packages/vim-mode-plus&#34;&gt;Vim mode plus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&amp;hellip;и дополнительно пакет для поддержки минимального набора ex (&lt;code&gt;:&lt;/code&gt;) команд &lt;a href=&#34;https://atom.io/packages/vim-mode-plus-ex-mode&#34;&gt;ex mode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Не забудьте прописать keymap:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;atom-text-editor.vim-mode-plus.normal-mode&#39;:
  &#39;:&#39;: &#39;vim-mode-plus-ex-mode:open&#39;
  &#39;!&#39;: &#39;vim-mode-plus-ex-mode:toggle-setting&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Пакет не реализует весь функционал оригинального &lt;em&gt;vim&lt;/em&gt;, но вполне достаточный,
что-бы чувствовать себя комфортно.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmagXg7Y11R1dPbtXby3W1tYSddkAudHKwfQ12rUqH6hSU/install_vim_mode.png&#34; alt=&#34;Install vim mode&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;оформление&#34;&gt;Оформление&lt;/h2&gt;

&lt;p&gt;На мой взгляд тема &lt;em&gt;Atom-a&lt;/em&gt; резковата.&lt;/p&gt;

&lt;p&gt;Мне нравится тема &lt;a href=&#34;https://atom.io/themes/lucius-dark-syntax&#34;&gt;Lucius dark&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;И моноширный шрифт &lt;a href=&#34;http://input.fontbureau.com/&#34;&gt;Input&lt;/a&gt;.
На сайте можно поиграться и собрать шрифт под себя.&lt;/p&gt;

&lt;h2 id=&#34;platformio&#34;&gt;PlatformIO&lt;/h2&gt;

&lt;p&gt;Ставим пакет &lt;a href=&#34;https://atom.io/packages/platformio-ide&#34;&gt;PlatformIO IDE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ставим пакет терминала &lt;a href=&#34;https://atom.io/packages/platformio-ide-terminal&#34;&gt;PlatformIO IDE terminal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PlatformIO IDE предоставляет:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;поддержку большого количества плат, платформ и фреймворков.&lt;/li&gt;
&lt;li&gt;Автозавершение кода.&lt;/li&gt;
&lt;li&gt;Проверку кода на лету.&lt;/li&gt;
&lt;li&gt;Управление библиотеками.&lt;/li&gt;
&lt;li&gt;Работа с несколькими проектами.&lt;/li&gt;
&lt;li&gt;Монитор последовательного порта.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;После перезапуска &lt;em&gt;Atom&lt;/em&gt; видим экран приглашения &lt;em&gt;PlatformIO&lt;/em&gt; с быстрым доступом
к некоторым командам среды.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmTm9ig4B5gCBe8B6yHZAMTN7tCqydy7r8VKAiDqvD9Zox/platformio_home.png&#34; alt=&#34;Home screen&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Его можно отключить сняв галку &lt;code&gt;Show PlatformIO Home screen&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;переход-к-определению-символа&#34;&gt;Переход к определению символа&lt;/h2&gt;

&lt;p&gt;Тут не всё так гладко. Для автокомплита PlatformIO IDE использует пакет &lt;a href=&#34;https://atom.io/packages/autocomplete-clang&#34;&gt;autocomplete clang&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Он умеет кроме автокомплита переходить к определению символа, а вот возвращаться обратно не умеет (или я не нашел?)&lt;/p&gt;

&lt;p&gt;Я переопределил переход на клавишу &lt;code&gt;F12&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;.workspace&#39;:
  &#39;f12&#39;: &#39;autocomplete-clang:go-declaration&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Этот способ имеет то преимущество, что позволяет скакать не только по файлам проекта, но и к стандартным библиотекам.&lt;/p&gt;

&lt;p&gt;Для удобной навигации по проекту воспользуемся ctags.&lt;/p&gt;

&lt;p&gt;Для этого устанавливаем пакет &lt;a href=&#34;https://atom.io/packages/atom-ctags&#34;&gt;Atom ctags&lt;/a&gt; на замену штаному &lt;em&gt;symbols-view&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Ну и можно переопределить под себя клавиатурные сочетания:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;atom-text-editor&#39;:
  &#39;ctrl-]&#39;: &#39;atom-ctags:go-to-declaration&#39;
  &#39;ctrl-t&#39;: &#39;atom-ctags:return-from-declaration&#39;
  &#39;ctrl-f12&#39;:	&#39;atom-ctags:toggle-file-symbols&#39;
  &#39;ctrl-shift-f12&#39;:	&#39;atom-ctags:toggle-project-symbols&#39;
  &#39;ctrl-f11&#39;:	&#39;atom-ctags:rebuild&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для нормальной работы придётся периодически пересобирать &lt;code&gt;ctags&lt;/code&gt; (Atom Ctags: Rebuild).&lt;/p&gt;

&lt;p&gt;В настройках &lt;em&gt;Atom ctags&lt;/em&gt; желательно прописать исключения файлов, который не должны попадать в индекс.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--exclude=.* --exclude=*.json --exclude=*.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmRNiHPduVt83NYK95bnEJvDsTUywRGfFAqjeG6PmmhokC/ctags-cmd-args.png&#34; alt=&#34;Atom ctags cmd args&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;новый-проект&#34;&gt;Новый проект&lt;/h2&gt;

&lt;p&gt;Можно открыть &lt;code&gt;PlatformIO Home&lt;/code&gt; и выбрать команду создания там.
Можно в панели быстрого доступа &lt;code&gt;Ctrl+Shift+p&lt;/code&gt; набрать &lt;code&gt;pio new proj&lt;/code&gt; и вызвать диалог создания непосредственно.&lt;/p&gt;

&lt;p&gt;В диалоге выбираем платформы, под которые собирается проект (их может быть несколько) и каталог проекта.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmXPUdYJUtAocGHp59Zf781MqW11URC55mS5Qshkk9yqs7/pio_new_proj.png&#34; alt=&#34;PlatformIO New Project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Я сейчас рассматриваю &lt;code&gt;NodeMcu&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Перед нами пустой проект. В каталог &lt;code&gt;src&lt;/code&gt; складываем наши исходники, в каталог &lt;code&gt;lib&lt;/code&gt; будут помещены сторонние библиотеки.&lt;/p&gt;

&lt;p&gt;Созданим в каталоге &lt;code&gt;src&lt;/code&gt; файл &lt;code&gt;main.cpp&lt;/code&gt; следующего содержания:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;Arduino.h&amp;gt;

#define LED_BUILTIN 16

void setup()
{
  // initialize LED digital pin as an output.
  pinMode(LED_BUILTIN, OUTPUT);
}

void loop()
{
  // turn the LED on (HIGH is the voltage level)
  digitalWrite(LED_BUILTIN, HIGH);
  // wait for a second
  delay(1000);
  // turn the LED off by making the voltage LOW
  digitalWrite(LED_BUILTIN, LOW);
   // wait for a 0.1 second
  delay(100);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Тот кто уже в теме без сомнения узнал обычную ардуиновскую мигалку.&lt;/p&gt;

&lt;p&gt;Что бы собрать проект воспользуемся быстрой кнопкой слева в виде галочки. Она самая верхняя.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmTm9ig4B5gCBe8B6yHZAMTN7tCqydy7r8VKAiDqvD9Zox/build.png&#34; alt=&#34;Build project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Теоретически сборка должна запускаться комбинацией клавиш &lt;code&gt;Ctrl-Shift-B&lt;/code&gt;, но у меня это не получилось. Видимо какой-то плагин перетянул на себя одеяло.&lt;/p&gt;

&lt;p&gt;В прочем, ничего не мешает забиндить свои комбинации на сборку и загрузку:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;atom-workspace, atom-text-editor&#39;:
  &#39;F5&#39;: &#39;platformio-ide:target:upload&#39;
  &#39;F6&#39;: &#39;platformio-ide:target:build&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для загрузки проекта в устройство можно воспользоваться быстрой кнопкой в виде стрелки, либо штатной комбинацией &lt;code&gt;Ctrl-Shift-U&lt;/code&gt;.
Да, можно и нашей новой клавишей &lt;code&gt;F5&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmTm9ig4B5gCBe8B6yHZAMTN7tCqydy7r8VKAiDqvD9Zox/upload.png&#34; alt=&#34;Upload project&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Загрузка идёт достаточно медленно от того, что по умолчанию скорость загрузки &lt;strong&gt;115200&lt;/strong&gt; бод.&lt;/p&gt;

&lt;p&gt;Что бы раскочегарить процесс, откроем файл &lt;code&gt;platformio.ini&lt;/code&gt; и добавим
в секцию &lt;code&gt;[env:nodemcuv2]&lt;/code&gt; строчку &lt;code&gt;upload_speed = 460800&lt;/code&gt;.
А если железо позволяет, то даже &lt;code&gt;upload_speed = 921600&lt;/code&gt;.
Хотя в моём случае, повышение скорости порта наоборот увеличило время записи.&lt;/p&gt;

&lt;p&gt;Подробнее о настройках можно прочитать (в документации)[&lt;a href=&#34;http://docs.platformio.org/en/stable/platforms/espressif8266.html&#34;&gt;http://docs.platformio.org/en/stable/platforms/espressif8266.html&lt;/a&gt;].&lt;/p&gt;

&lt;h2 id=&#34;терминал&#34;&gt;Терминал&lt;/h2&gt;

&lt;p&gt;PlatformIO IDE так же позволяет подключиться к последовательному порту, и взаимодействовать с вашей программой.&lt;/p&gt;

&lt;p&gt;Модифицируем файл &lt;code&gt;main.cpp&lt;/code&gt; следующим образом:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;Arduino.h&amp;gt;

#define LED_BUILTIN 16

void setup()
{
  pinMode(LED_BUILTIN, OUTPUT);
  digitalWrite(LED_BUILTIN, HIGH);
  Serial.begin(115200);
  Serial.println(&amp;quot;Hello ES8266!&amp;quot;);
}

void loop()
{
  if (Serial.available() &amp;gt; 0) {
    String cmd = Serial.readStringUntil(&#39;\n&#39;);
    cmd.trim();
    if (cmd.equalsIgnoreCase(String(&amp;quot;on&amp;quot;))) {
      digitalWrite(LED_BUILTIN, LOW);
    } else if (cmd.equalsIgnoreCase(String(&amp;quot;off&amp;quot;))) {
      digitalWrite(LED_BUILTIN, HIGH);
    }
    Serial.print(&amp;quot;Command: &amp;quot;);
    Serial.println(cmd);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Соберём и загрузим прошивку в устройство (&lt;code&gt;Ctrl-Shift-U&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Вызвать &lt;strong&gt;Serial Monitor&lt;/strong&gt; можно либо из левой панели кнопок (кнопка с вилкой) либо комбинацией &lt;code&gt;Alt-Shift-M&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://ipfs.io/ipfs/QmP43tCfddGhmpJPMPjRNWENYVmiEWnotYd6f6fWTwjmBh/serial_monitor.png&#34; alt=&#34;Serial monitor&#34; /&gt;&lt;/p&gt;

&lt;p&gt;В появившемся диалоге выбираем порт, на котором висит устройство и скорость соединения (в нашем случае 115200 bod).&lt;/p&gt;

&lt;p&gt;После этого откроется монитор. Если нажать кнопку сброса, то увидим мусор (это инициализируется ESP8266) и затем приглашение &lt;code&gt;Hello ESP8266!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Давая команды &lt;code&gt;on&amp;lt;Enter&amp;gt;&lt;/code&gt; и &lt;code&gt;off&amp;lt;Enter&amp;gt;&lt;/code&gt; можем включать и выключать светодиод.&lt;/p&gt;

&lt;p&gt;Кстати, &lt;em&gt;PlatformIO IDE&lt;/em&gt; предоставляет удобную фичу. Нет нужды закрывать монитор
перед загрузкой проект. Среда сама закроет монитор, загрузит проект, и откроет
монитор повторно.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VS Code</title>
      <link>http://myhw.ru/post/vscode-intro/</link>
      <pubDate>Thu, 08 Dec 2016 11:32:36 +0300</pubDate>
      
      <guid>http://myhw.ru/post/vscode-intro/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Visual Studio Code&lt;/strong&gt; - мультиплатформенный редактор с открытым кодом от Microsoft на базе движка &lt;a href=&#34;http://electron.atom.io/&#34;&gt;Electron&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://myhw.ru/tags/vim&#34;&gt;Vim&lt;/a&gt; удобный и мощный &lt;a href=&#34;http://myhw.ru/tags/editor&#34;&gt;редактор&lt;/a&gt;, и во многих случаях он не заменим, например на отдалённом сервере, куда доступ есть только через консоль, и по медленному каналу.
Но для повседневной разработки настроить его очень и очень не просто.&lt;/p&gt;

&lt;p&gt;Я успешно вёл в нём разработку на &lt;a href=&#34;http://myhw.ru/tags/c&#34;&gt;C&lt;/a&gt;, который он хорошо поддерживает из коробки,
в том числе автодополнение через &lt;a href=&#34;http://myhw.ru/tags/ctags&#34;&gt;ctags&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Так же удобно использовать &lt;em&gt;vim&lt;/em&gt; для разработки на &lt;a href=&#34;http://myhw.ru/tags/go&#34;&gt;Go&lt;/a&gt; благодаря &lt;a href=&#34;https://github.com/fatih/vim-go&#34;&gt;плагину Vim-Go&lt;/a&gt;,
и собственному мощному инструментарию &lt;em&gt;Go&lt;/em&gt;. Но с прочими языками всё не так радужно.&lt;/p&gt;

&lt;p&gt;Очень хороша &lt;a href=&#34;https://www.jetbrains.com/idea/download/&#34;&gt;IntelliJ IDEA&lt;/a&gt; и с хорошим vim-mode плагином, но это всё же мощная IDE и для мелких повседневных задач - стрельба из пушки по воробьям.
Да и при использовании Communiti Edition накладывает много ограничений как на доступные языки (&lt;a href=&#34;http://myhw.ru/tags/java&#34;&gt;Java&lt;/a&gt;, &lt;a href=&#34;http://myhw.ru/tags/kotlin&#34;&gt;Kotlin&lt;/a&gt;, &lt;a href=&#34;http://myhw.ru/tags/go&#34;&gt;Go&lt;/a&gt;),
так и на область применения ограниченную лицензией.&lt;/p&gt;

&lt;p&gt;Так что уже долгое время я присматривал альтернативу для &lt;em&gt;Vim&lt;/em&gt;, когда начали появлятся редакторы на базе движка &lt;a href=&#34;http://electron.atom.io/&#34;&gt;Electron&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lighttable.com/&#34;&gt;LightTable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VSCode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Atom на мой взгляд перегружен функционалом, и плагин для vim-mode в нём мягко говоря странный. Так я не нашел поддержки одной из основных vim-овских команд &lt;code&gt;:&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;LightTable сыроват, маленькое комьюнити соответственно мало расширений. Плагин для vim-mode тоже не без странностей и глюков. Не нашел поддержки &lt;strong&gt;c/c++&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;В итоге остановился на VSCode. Тоже далеко не сразу, но редактор очень быстро развивается, и по сравнению с тем, что было год назад,
когда пользоваться им можно было с большой натяжкой, сейчас он превратился в мощный и удобный инструмент.&lt;/p&gt;

&lt;p&gt;Ключевые для меня моменты:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Поддержка &lt;em&gt;vim-mode&lt;/em&gt; &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vscodevim.vim&#34;&gt;сторонним плагином&lt;/a&gt; на высоте.
При переключении между оригинальным Vim и VSCode с установленным плагином я не испытывал дискомфорта, когда внезапно попадаешь на отсутствующую команду.
Некоторые неувязки исправляются конфигурационными файлами.&lt;/li&gt;
&lt;li&gt;Удобное конфигурирование через &lt;strong&gt;JSON&lt;/strong&gt; файлы. Причём конфигурацию можно изменять как глобально, так и создать непосредственно для рабочей области.&lt;/li&gt;
&lt;li&gt;Нет отдельных сущностей для проекта и/или рабочей области. Достаточно запустить &lt;code&gt;code .&lt;/code&gt; из консоли и текущая директория с поддиректориями считается рабочей областью.&lt;/li&gt;
&lt;li&gt;Кроме собственно возможностей редактора &lt;em&gt;VSCode&lt;/em&gt; предоставляет возможности для интеграции с отладчиком и создания задач для сборки проектов.&lt;/li&gt;
&lt;li&gt;Палитра команд с нечётким поиском. Т.е. для большинства действий не надо пользоваться мышью для поиска команды в меню или вспоминать точное название команды.
Достаточно нажать &lt;code&gt;Ctrl+P &amp;gt;&lt;/code&gt; (или &lt;code&gt;Ctrl+Shift+P&lt;/code&gt;, или &lt;code&gt;F1&lt;/code&gt;) и начать писать одно или несколько слов команды или её описания.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;установка&#34;&gt;Установка&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/Download&#34;&gt;Качаем пакет для вашей операционки&lt;/a&gt;.
Для противников пакетных менеджеров и инсталляторов есть сборки в архивах.&lt;/p&gt;

&lt;p&gt;Я использовал пакет для &lt;strong&gt;Debian&lt;/strong&gt; и установил его через &lt;code&gt;sudo dpkg -i code_1.7.2-1479766213_amd64.deb&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Теперь можем запустить редактор &lt;code&gt;code&lt;/code&gt;. Видим минималистичный интерфейс.&lt;/p&gt;

&lt;p&gt;Теперь установим поддержку &lt;em&gt;vim-mode&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Нажимаем &lt;code&gt;Ctrl+P&lt;/code&gt; для вызова поля ввода действий,&lt;/li&gt;
&lt;li&gt;вводим &lt;code&gt;ext install vim&lt;/code&gt; &lt;code&gt;Enter&lt;/code&gt; для поиска расширений.&lt;/li&gt;
&lt;li&gt;И устанавливаем &lt;strong&gt;Vim&lt;/strong&gt; от &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vscodevim.vim&#34;&gt;vscodevim&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Собственно до этого момента я набирал этот текст в оригинальном vim, теперь переключился в VSCode.&lt;/p&gt;

&lt;h2 id=&#34;темы&#34;&gt;Темы&lt;/h2&gt;

&lt;p&gt;Изменить тему интерфейса включая синтаксис (о чудо, теперь не будет тёмного окна редактора кода со светлыми элементами вокруг),
а так же тему значков файлов можно как через меню &lt;code&gt;Файл&lt;/code&gt;/&lt;code&gt;Параметры&lt;/code&gt; так и через палитру команд.&lt;/p&gt;

&lt;p&gt;Нажимаем &lt;code&gt;F1&lt;/code&gt; (или &lt;code&gt;Ctrl+Shift+P&lt;/code&gt;) и начинаем вводить &lt;code&gt;color theme&lt;/code&gt; или &lt;code&gt;icon theme&lt;/code&gt;. Как нужная команда останется у нас на первом месте можно сразу жать &lt;code&gt;Enter&lt;/code&gt;, что бы выполнить её.
Так же нужную команду можно выбрать стрелками вверх-вниз, но это лишнее движение правой рукой ;-)&lt;/p&gt;

&lt;h2 id=&#34;настройки&#34;&gt;Настройки&lt;/h2&gt;

&lt;p&gt;Если какое-то поведение среды вас не устраивает, то его можно почти наверняка изменить настройками.&lt;/p&gt;

&lt;p&gt;Например, по умолчанию используется шрифт &lt;code&gt;Droid Sans Mono&lt;/code&gt;.
Он сам по себе не плох, но мне больше нравится &lt;a href=&#34;http://input.fontbureau.com/&#34;&gt;Input&lt;/a&gt; да и размер настроить не мешает.&lt;/p&gt;

&lt;p&gt;Открыть файл настроек можно через меню или через палитру команд.&lt;/p&gt;

&lt;p&gt;Нажимаем &lt;code&gt;F1&lt;/code&gt;, начинаем набирать &lt;code&gt;user settings&lt;/code&gt; и как видим, что достигли нужного пункта жмём &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Рабочая область автоматом разбивается на две группы, в левой настройки по умолчанию,
в правой редактор с файлом settings.json настроек пользователя.&lt;/p&gt;

&lt;p&gt;Копируем интересующие нас настройки слева на право и редактируем их по своему вкусу.&lt;/p&gt;

&lt;p&gt;У меня в итоге получился такой файл:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// settings.json
{
    &amp;quot;editor.fontFamily&amp;quot;: &amp;quot;&#39;Input&#39;, &#39;Droid Sans Mono&#39;, &#39;Courier New&#39;, monospace, &#39;Droid Sans Fallback&#39;&amp;quot;,
    &amp;quot;editor.fontSize&amp;quot;: 12,
    &amp;quot;editor.rulers&amp;quot;: [80, 120],

    &amp;quot;files.exclude&amp;quot;: {
        &amp;quot;**/.git&amp;quot;: true,
        &amp;quot;**/.svn&amp;quot;: true,
        &amp;quot;**/.hg&amp;quot;: true,
        &amp;quot;**/.DS_Store&amp;quot;: true,
        &amp;quot;**/.*.swp&amp;quot;: true
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Аналогично можно поменять настройки рабочей области:
Нажимаем &lt;code&gt;F1&lt;/code&gt;, начинаем набирать &lt;code&gt;workspace settings&lt;/code&gt; и как видим, что достигли нужного пункта жмём &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Следует отметить, что настройки вступают в силу сразу после сохранения файла.&lt;/p&gt;

&lt;p&gt;Настроить язык среды так же можно через конфигурационные файлы. Ну мало ли вам не нравится русский интерфейс?&lt;/p&gt;

&lt;p&gt;Нажимаем &lt;code&gt;F1&lt;/code&gt;, начинаем набирать &lt;code&gt;conf lang&lt;/code&gt; и как видим, что достигли нужного пункта жмём &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;В открывшемся файле указываем указываем для параметра &lt;code&gt;locale&lt;/code&gt; код языка.
Для должного эффекта в этом случае придётся перезапустить VSCode.&lt;/p&gt;

&lt;p&gt;Внимательный читатель, конечно обратил внимание, что для редактирования языка я написал &lt;code&gt;conf lang&lt;/code&gt; вместо полного &lt;code&gt;configure language&lt;/code&gt;.
Но это не ошибка, а невероятно удобная фича нечёткого поиска.
Можно набирать &lt;code&gt;conflang&lt;/code&gt; или даже &lt;code&gt;cola&lt;/code&gt; и всё равно нужна команда будет найдена.&lt;/p&gt;

&lt;p&gt;Да, если вы оставили VSCode на русском языке, то &lt;code&gt;F1&lt;/code&gt; &lt;code&gt;настряз&lt;/code&gt; &lt;code&gt;Enter&lt;/code&gt; тоже сработает.&lt;/p&gt;

&lt;p&gt;Так что не зря палитра команд назначена так же на клавишу &lt;code&gt;F1&lt;/code&gt; по сути это мини-помощь с поиском.&lt;/p&gt;

&lt;h2 id=&#34;клавиатурные-комбинации&#34;&gt;Клавиатурные комбинации&lt;/h2&gt;

&lt;p&gt;Поменять сочетания клавиш для вызова той или иной команды может потребоваться по разным причинам:
комбинация не устраивает, отсутствует, или как в моём случае переопределена расширением &lt;strong&gt;vim&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Нажимаем &lt;code&gt;F1&lt;/code&gt;, начинаем набирать &lt;code&gt;keyboard shortcut&lt;/code&gt; и как видим, что достигли нужного пункта жмём &lt;code&gt;Enter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Как и для настроек окно будет разбито на две панели со списком существующих комбинаций (с учётом определённых плагинами).
В конце списка существующих комбинаций приведены команды, на которые не назначены шорткаты.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;// keybinding.json
[

// Показать информацию по идентификатору
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+i&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;editor.action.previewDeclaration&amp;quot;,
        &amp;quot;when&amp;quot;: &amp;quot;editorHasDefinitionProvider &amp;amp;&amp;amp; editorTextFocus &amp;amp;&amp;amp; !inReferenceSearchEditor&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;shift+f6&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;editor.action.rename&amp;quot;,
        &amp;quot;when&amp;quot;: &amp;quot;editorHasRenameProvider &amp;amp;&amp;amp; editorTextFocus &amp;amp;&amp;amp; !editorReadonly&amp;quot; },

// Показать/скрыть боковую панель
    { &amp;quot;key&amp;quot;: &amp;quot;f3&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.toggleSidebarVisibility&amp;quot; },
// Показать/скрыть панель (fix vim)
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+j&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.togglePanel&amp;quot; },
    
    
// Перемещение между редакторами
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+l&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.focusNextGroup&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+h&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.focusPreviousGroup&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;alt+l&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.nextEditor&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;alt+h&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.previousEditor&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;alt+right&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.nextEditor&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;alt+left&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.previousEditor&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+f4&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.closeActiveEditor&amp;quot; },

// Запуск задач
    { &amp;quot;key&amp;quot;: &amp;quot;f8&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.tasks.build&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+f8&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.tasks.runTask&amp;quot;
    },
// Vim correction
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+]&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;editor.action.goToDeclaration&amp;quot;,
        &amp;quot;when&amp;quot;: &amp;quot;editorHasDefinitionProvider &amp;amp;&amp;amp; editorTextFocus&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+t&amp;quot;,
        &amp;quot;command&amp;quot;: &amp;quot;workbench.action.navigateBack&amp;quot; },

    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+w n&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.files.newUntitledFile&amp;quot; },
    { &amp;quot;key&amp;quot;: &amp;quot;ctrl+w c&amp;quot;, &amp;quot;command&amp;quot;: &amp;quot;workbench.action.closeActiveEditor&amp;quot; }

]
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Компилируем для ARM</title>
      <link>http://myhw.ru/post/arm-none-eabi/</link>
      <pubDate>Thu, 08 Dec 2016 10:21:32 +0300</pubDate>
      
      <guid>http://myhw.ru/post/arm-none-eabi/</guid>
      <description>&lt;p&gt;Как известно, программный код на языке выского уровня сам в микроконтроллер не полезет,
его требуется предварительно скомпилировать в машинный код
(мы не берём интерпретируемые языки, но в этом случае в микроконтроллер должен быть уже прошит интерпретатор).
Для микроконтроллеров на базе ядра ARM/Cortex можно воспользовать кросскопилятором &lt;code&gt;gcc-arm-none-eabi&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Магическое название компилятора &lt;code&gt;gcc-arm-none-eabi&lt;/code&gt; означает следующее:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gcc&lt;/code&gt; - название компилятора;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arm&lt;/code&gt; - архитектура процессора;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;none&lt;/code&gt; - компилятор не вносит никакого дополнительного bootstrap кода от себя;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eabi&lt;/code&gt; - код соответствует спецификации &lt;a href=&#34;https://ru.wikipedia.org/wiki/%D0%94%D0%B2%D0%BE%D0%B8%D1%87%D0%BD%D1%8B%D0%B9_%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81_%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9&#34;&gt;EABI&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;gcc-arm-embedded&#34;&gt;GCC ARM Embedded&lt;/h2&gt;

&lt;p&gt;Самый простой способ, это использовать готовые &lt;a href=&#34;https://launchpad.net/gcc-arm-embedded&#34;&gt;бинарные сборки&lt;/a&gt; для своей операционной системы. Доступны сборки для Linux, Mac, Windows.&lt;/p&gt;

&lt;p&gt;Сборка уже все необходимые инструменты для компиляции ваших приложений а так же адаптированную для встраиваемых устройств стандартную библиотеку функция &lt;a href=&#34;https://sourceware.org/newlib/&#34;&gt;newlib&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;TODO как распаковать и прописать пути.&lt;/p&gt;

&lt;h2 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h2&gt;

&lt;p&gt;Если у вас Ubuntu 12.04/14.04/15.&lt;sup&gt;10&lt;/sup&gt;&amp;frasl;&lt;sub&gt;16&lt;/sub&gt;.04 &lt;sup&gt;32&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt;-bit, то вы можете воспользоваться &lt;a href=&#34;https://launchpad.net/~team-gcc-arm-embedded/+archive/ubuntu/ppa&#34;&gt;PPA репозиторием&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;debian&#34;&gt;Debian&lt;/h2&gt;

&lt;p&gt;В свою очередь Debian начиная с Jessie содержит в своих репозиториях пакетов сборку &lt;code&gt;arm-none-eabi-gcc&lt;/code&gt;. Версии пакетов не самые свежие, но как правило вполне достаточные для работы.&lt;/p&gt;

&lt;p&gt;Установить полный фарш можно командой:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install -t jessie-backports gcc-arm-none-eabi binutils-arm-none-eabi gdb-arm-none-eabi libnewlib-arm-none-eabi libnewlib-dev libstdc++-arm-none-eabi-newlib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Дополнительно можно установить документацию по &lt;code&gt;newlib&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install -t jessie-backports libnewlib-doc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Обратите внимание на параметр &lt;code&gt;-t jessie-backports&lt;/code&gt;. В моём случае он означает, что пакеты необходимо устанавливать из репозитория &lt;a href=&#34;https://backports.debian.org/&#34;&gt;backports&lt;/a&gt;, там они новее, чем в stable версии.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Символы Unicode</title>
      <link>http://myhw.ru/post/unicode_signs/</link>
      <pubDate>Fri, 07 Oct 2016 14:07:45 +0300</pubDate>
      
      <guid>http://myhw.ru/post/unicode_signs/</guid>
      <description>&lt;p&gt;Подборка некоторых полезных символов из юникода.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Символ&lt;/th&gt;
&lt;th&gt;Название&lt;/th&gt;
&lt;th&gt;Код&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;#x20BD;&lt;/td&gt;
&lt;td&gt;Рубль. Знак валюты&lt;/td&gt;
&lt;td&gt;U+20BD&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;#x2713;&lt;/td&gt;
&lt;td&gt;Check mark&lt;/td&gt;
&lt;td&gt;U+2713&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;#x2714;&lt;/td&gt;
&lt;td&gt;Heavy check mark&lt;/td&gt;
&lt;td&gt;U+2714&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;#x2705;&lt;/td&gt;
&lt;td&gt;White heavy check mark&lt;/td&gt;
&lt;td&gt;U+2705&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;#x237B;&lt;/td&gt;
&lt;td&gt;Not check mark&lt;/td&gt;
&lt;td&gt;U+237B&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;#x2610;&lt;/td&gt;
&lt;td&gt;Ballot box&lt;/td&gt;
&lt;td&gt;U+2610&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;#x2611;&lt;/td&gt;
&lt;td&gt;Ballot box with check&lt;/td&gt;
&lt;td&gt;U+2611&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Под X-сервером ввод символа с помощью его кода начинается комбинацией &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;U&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Вставить символ в HTML документ можно через апмперсанд последовательность.
Например &amp;#x00A9; &lt;code&gt;&amp;amp;#x00A9;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ToDo</title>
      <link>http://myhw.ru/todo/</link>
      <pubDate>Thu, 06 Oct 2016 22:13:06 +0300</pubDate>
      
      <guid>http://myhw.ru/todo/</guid>
      <description>&lt;p&gt;Планы на будущее&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;home-light-control-iot&#34;&gt;[ ] Home Light Control (IoT)&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Идея&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Макет&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Прошивка&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; PCB&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;дверной-звонок&#34;&gt;[ ] Дверной звонок&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Идея&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Макет&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Прошивка&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; PCB&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;esp-link&#34;&gt;[ ] ESP-Link&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;a href=&#34;http://myhw.ru/post/esp-link-flash&#34;&gt;Прошивка&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Компиляция SDK &lt;a href=&#34;https://github.com/pfalcon/esp-open-sdk&#34;&gt;https://github.com/pfalcon/esp-open-sdk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Компиляция кода &lt;a href=&#34;https://github.com/jeelabs/esp-link&#34;&gt;https://github.com/jeelabs/esp-link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Демоплата&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Схема-плата переходника&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; STM32 программатор&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Android приложение&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;friendlyarm&#34;&gt;[ ] FriendlyARM&lt;/h2&gt;

&lt;h3 id=&#34;прошивка&#34;&gt;[ ] Прошивка&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Установка U-boot&lt;/li&gt;
&lt;li&gt;Установка ядра и минимальной системы&lt;/li&gt;
&lt;li&gt;Конфигурирование сети&lt;/li&gt;
&lt;li&gt;Telnet&lt;/li&gt;
&lt;li&gt;SSH/FTP&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;разработка&#34;&gt;[ ] Разработка&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Установка тулчейна&lt;/li&gt;
&lt;li&gt;Компиляция Hello world&lt;/li&gt;
&lt;li&gt;Компиляция LUA&lt;/li&gt;
&lt;li&gt;Установка QTE&lt;/li&gt;
&lt;li&gt;Экранное приложение&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;nim&#34;&gt;[ ] Nim&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Установка Nim&lt;/li&gt;
&lt;li&gt;Hello world&lt;/li&gt;
&lt;li&gt;HTTP сервер&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;openwrt-роутер-и-openocd&#34;&gt;[ ] OpenWRT роутер и OpenOCD&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Установка&lt;/li&gt;
&lt;li&gt;Сборка прошивки&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;nim-и-openwrt&#34;&gt;[ ] Nim и OpenWRT&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Тулчейн&lt;/li&gt;
&lt;li&gt;Hello world&lt;/li&gt;
&lt;li&gt;HTTP server&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;navspark-mini&#34;&gt;[ ] Navspark-mini&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Что за зверь&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Настройка раскладок клавиатуры</title>
      <link>http://myhw.ru/post/keyboard_layout/</link>
      <pubDate>Tue, 14 Jun 2016 11:00:00 +0300</pubDate>
      
      <guid>http://myhw.ru/post/keyboard_layout/</guid>
      <description>&lt;p&gt;Настройка раскладок клавиатуры в X11/Xorg&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;просмотр-текущих-опций&#34;&gt;Просмотр текущих опций&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ setxkbmap -query
rules:      evdev
model:      pc105
layout:     us,ru
variant:    ,
options:    ctrl:nocaps,grp:alt_shift_toggle,grp_led:scroll
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;установка-новых-значений&#34;&gt;Установка новых значений&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ setxkbmap -option -option &amp;quot;ctrl:nocaps,grp:alt_shift_toggle,grp_led:scroll&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Двойной &lt;code&gt;-option&lt;/code&gt; нужен, что бы стереть старые опции.
Если указать только один &lt;code&gt;-option&lt;/code&gt;, то значения будут дописаны к существующим.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Прошивка ESP-Link</title>
      <link>http://myhw.ru/post/esp-link-flash/</link>
      <pubDate>Tue, 15 Mar 2016 11:59:38 +0300</pubDate>
      
      <guid>http://myhw.ru/post/esp-link-flash/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/jeelabs/esp-link&#34;&gt;ESP-Link&lt;/a&gt; - это WiFi-Serial мост на базе SoC ESP8266.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Кроме моста имеются дополнительные плюшки как то:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Отправка REST запросов.&lt;/li&gt;
&lt;li&gt;Клиент MQTT протокола.&lt;/li&gt;
&lt;li&gt;Программатор AVR и LPC микроконтроллеров, а так же других модулей ESP8266 (по последовательному порту).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В данный момент стабильной является прошивка версии &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases/tag/v2.1.7&#34;&gt;2.1.7&lt;/a&gt;
и самым простым вариантом установки будет взять собранные бинарные файлы и прошить их в модуль.&lt;/p&gt;

&lt;p&gt;Поддерживаются как модули с 512 Кбайт флеш-памяти (например ESP-01, ESP-07) так и модули с 4 Мбайт флеш-памяти (например ESP-12).&lt;/p&gt;

&lt;p&gt;В общем и целом, ограничений на типы модулей нет, ESP-Link успешно конфигурируется под разные GPIO через Web-интерфейс.&lt;/p&gt;

&lt;h2 id=&#34;прошивка&#34;&gt;Прошивка&lt;/h2&gt;

&lt;p&gt;Для прошивки нам потребуется утилита &lt;a href=&#34;https://github.com/themadinventor/esptool&#34;&gt;ESPTool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Для себя я не стал её инсталлировать в систему, а просто скопировал &lt;a href=&#34;https://github.com/themadinventor/esptool/blob/master/esptool.py&#34;&gt;esptool.py&lt;/a&gt;
в &lt;code&gt;~/bin&lt;/code&gt;, а библиотеку &lt;a href=&#34;https://github.com/pyserial/pyserial&#34;&gt;pyserial&lt;/a&gt; поставил через пакетный менеджер дистрибутива.&lt;/p&gt;

&lt;p&gt;На &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases&#34;&gt;странице релизов&lt;/a&gt; скачиваем
последнюю &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases/tag/v2.1.7&#34;&gt;стабильную прошивку&lt;/a&gt;
или &lt;a href=&#34;https://github.com/jeelabs/esp-link/releases/tag/v2.2.beta2&#34;&gt;бету&lt;/a&gt;, если есть желание поэкспериментировать.&lt;/p&gt;

&lt;p&gt;Распаковываем полученный файл:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar xzvf esp-link-v2.1.7.tgz
cd esp-link-v2.1.7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Подключаем прошиваемый модуль к компьютеру через Usb-TTLSerial переходник. Следует помнить, что выходы TX-RX
переходника должны выдавать напряжение от 0 до 3.3 вольт. Переходники с напряжением 5 вольт, могут безвозвратно
повредить модуль.&lt;/p&gt;

&lt;p&gt;Для нормальной работы модуля вывод &lt;code&gt;CH_PD&lt;/code&gt; должен быть подтянут к питанию через резистор 1-10 Ком,
вывод &lt;code&gt;GPIO15&lt;/code&gt; должен быть подтянут к земле через резистор 1-10 Ком.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://myhw.ru/img/esp/ESP_min.png&#34; alt=&#34;ESP&#34; /&gt; &lt;a href=&#34;http://esp8266.github.io/Arduino/versions/2.1.0-rc2/doc/boards.html#minimal&#34;&gt;Minimal&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Для входа в режим программирования следует подтянуть выход &lt;code&gt;GPIO0&lt;/code&gt; к земле через резистор 1-10 Ком,
и произвести сброс контроллера кратковременной подачей низкого уровня на вход &lt;code&gt;RESET&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;После этого модуль готов к прошивке.&lt;/p&gt;

&lt;p&gt;Для версии с 4 Мбайтами флеш-памяти выполняем команду:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash -fs 32m -ff 80m \
    0x00000 boot_v1.4\(b1\).bin 0x1000 user1.bin 0x3FE000 blank.bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для версии с 512 Кбайтами флеш-памяти выполняем команду:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash -fs 4m -ff 40m \
    0x00000 boot_v1.4\(b1\).bin 0x1000 user1.bin 0x7E000 blank.bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если возникли проблемы в процессе прошивки то можно попробовать снизить скорость обмена по последовательному порту &lt;code&gt;--baud 115200&lt;/code&gt;
и/или скорость обмена с SPI-flash &lt;code&gt;-ff 20m&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;После успешной прошивки модуль доступен по сети WiFi как точка доступа.&lt;/p&gt;

&lt;p&gt;Если ранее модуль уже был прошит как esp-link, то обновление прошивки можно провести по воздуху:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./wiflash &amp;lt;esp-hostname&amp;gt; user1.bin user2.bin
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>EmGo</title>
      <link>http://myhw.ru/post/emgo/</link>
      <pubDate>Mon, 14 Mar 2016 11:25:34 +0300</pubDate>
      
      <guid>http://myhw.ru/post/emgo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/ziutek/emgo&#34;&gt;EmGo&lt;/a&gt; - язык для программирования микроконтроллеров с Go-синтаксисом.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;установка&#34;&gt;Установка&lt;/h2&gt;

&lt;p&gt;Для установки нам потребуется &lt;a href=&#34;https://golang.org/dl/&#34;&gt;Go версии 1.6+&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Получаем код:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go get -u -v github.com/ziutek/emgo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Устанавливаем компилятор&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go install -v github.com/ziutek/emgo/egc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Прописываем пременные окружения:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export EGCC=/usr/local/arm/gcc-arm-none-eabi/bin/arm-none-eabi-gcc
export EGLD=/usr/local/arm/gcc-arm-none-eabi/bin/arm-none-eabi-ld
export EGAR=/usr/local/arm/gcc-arm-none-eabi/bin/arm-none-eabi-ar

export EGROOT=$HOME/go/src/github.com/ziutek/emgo/egroot
export EGPATH=$HOME/go/src/github.com/ziutek/emgo/egpath
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для сборки бинарного файла egc использует gcc тулчейн. Можно взять например этот &lt;a href=&#34;https://launchpad.net/gcc-arm-embedded&#34;&gt;GCC ARM Embedded&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Я обычно распаковываю его как есть в &lt;code&gt;/usr/local/arm&lt;/code&gt; и делаю симлинк:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/local/arm
sudo tar xvf ~/Downloads/gcc-arm-none-eabi-5_2-2015q4-20151219-linux.tar.bz2
sudo ln -s gcc-arm-none-eabi-5_2-2015q4 gcc-arm-none-eabi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Так же нужно установить &lt;code&gt;OpenOCD&lt;/code&gt;, если он ещё не установлен:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install openocd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Или можно использовать тулзу &lt;a href=&#34;https://github.com/texane/stlink&#34;&gt;StLink&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;прошивка-тестового-примера&#34;&gt;Прошивка тестового примера&lt;/h2&gt;

&lt;p&gt;После этого, можно отправится к примерам. Из коробки поддерживается демоборда &lt;code&gt;F4 Discovery&lt;/code&gt;, которая у меня была под рукоу.&lt;/p&gt;

&lt;p&gt;Сразу возьмём что нибудь по-нагляднее &lt;del&gt;с блекджеком и&amp;hellip;&lt;/del&gt; т.е. с каналами и горутинами:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd $EGPATH/src/stm32/examples/f4-discovery/channels
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Мне не удалось запустить приложение из RAM, поэтому я отредактировал &lt;code&gt;script.ld&lt;/code&gt; и заменил строчку&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INCLUDE stm32/loadram
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;на&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INCLUDE stm32/loadflash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь собираем наше приложение:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;../build.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если копиляция прошла успешно, получили бинарник в elf-е &lt;code&gt;cortexm4f.elf&lt;/code&gt;. Прошиваем его в демоплату через OpenOCD:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;../load-oocd.sh flash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Бинго! Плата начинает нам весело подмигивать всеми четырьмя светодиодами.&lt;/p&gt;

&lt;h2 id=&#34;что-дальше&#34;&gt;Что дальше?&lt;/h2&gt;

&lt;p&gt;Дальше изучать &lt;a href=&#34;https://github.com/ziutek/emgo/tree/master/egpath/src/stm32/examples&#34;&gt;примеры&lt;/a&gt;, читать &lt;a href=&#34;https://sites.google.com/site/embeddedgo/&#34;&gt;документацию&lt;/a&gt; (пока она весьма условна), писать собственные приложения.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Banana Pi</title>
      <link>http://myhw.ru/post/bananaPi/</link>
      <pubDate>Wed, 17 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://myhw.ru/post/bananaPi/</guid>
      <description>&lt;p&gt;Banana Pi — семейство одноплатных компьютеров на базе микроконтроллеров с ядром ARM производства Allwinner.&lt;/p&gt;

&lt;p&gt;Может работать под управлением различных операционных систем: Android 4.2, Android 4.4, Lubuntu, Raspbian, Debian, Fedora, Arch Linux, Gentoo, openSUSE, Berryboot, FreeBSD, OpenWrt, Slackware, Tiny Core Linux.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.armbian.com/banana-pi/&#34;&gt;http://www.armbian.com/banana-pi/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bananian.org/details&#34;&gt;https://www.bananian.org/details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bananian.org/download&#34;&gt;https://www.bananian.org/download&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;user-define-led-green&#34;&gt;User-Define LED (Green)&lt;/h2&gt;

&lt;p&gt;Управляем светодиодом через GPIO:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo gpio &amp;gt; /sys/class/leds/green\:ph24\:led1/trigger
$ echo 255 &amp;gt; /sys/class/leds/green:ph24:led1/brightness # On
$ echo 255 &amp;gt; /sys/class/leds/green:ph24:led1/brightness # Off
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Отключить триггер:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo none &amp;gt; /sys/class/leds/green\:ph24\:led1/trigger
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Посмотреть все доступные триггеры&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat /sys/class/leds/green\:ph24\:led1/trigger
none battery-charging-or-full battery-charging battery-charging-or-full
battery-charging-blink-full-solid ac-online usb-online mmc0 timer
heartbeat backlight [gpio] cpu0 cpu1 default-on
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Генератор сайтов Hugo</title>
      <link>http://myhw.ru/post/hugo/</link>
      <pubDate>Tue, 16 Feb 2016 13:18:37 +0300</pubDate>
      
      <guid>http://myhw.ru/post/hugo/</guid>
      <description>&lt;p&gt;Hugo - генератор статичных сайтов  подбный &lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; и написанный на языке программирования &lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;документация&#34;&gt;Документация&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/overview/installing/&#34;&gt;Установка&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Быстрый старт&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;Размещение на Github Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Темы оформления&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/go-templates/&#34;&gt;Шаблоны страниц&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/templates/variables/&#34;&gt;Переменные шаблонов&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Для успешной работы надо ознакомится с &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;markdown форматированием&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;подстветка&#34;&gt;Подстветка&lt;/h2&gt;

&lt;p&gt;Hugo позволяет &lt;a href=&#34;https://gohugo.io/extras/highlighting/&#34;&gt;подсвечивать код&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;main&lt;/span&gt;

&lt;span style=&#34;color: #f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;fmt&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color: #a6e22e&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #a6e22e&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;Println&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&#34;tips&#34;&gt;Tips&lt;/h2&gt;

&lt;p&gt;Метатег &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt; отрезает текст и вставляет ссылку &amp;ldquo;Read more&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Первый пост</title>
      <link>http://myhw.ru/post/first/</link>
      <pubDate>Tue, 16 Feb 2016 13:08:46 +0300</pubDate>
      
      <guid>http://myhw.ru/post/first/</guid>
      <description>&lt;p&gt;Традиционный первый &lt;del&gt;тост&lt;/del&gt; пост.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Я оставлю его здесь для истории, что бы запомнить момент, когда я начал использовать &lt;a href=&#34;http://myhw.ru/post/hugo&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Раньше этого поста могут появляться и другие, если заметка была написана раньше по времени.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
&lt;img src=&#34;http://myhw.ru/img/hugo/rabbit.jpg&#34; alt=&#34; Funny Rabbit&#34; /&gt;
&lt;/center&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>О сайте</title>
      <link>http://myhw.ru/about/</link>
      <pubDate>Tue, 16 Feb 2016 12:39:22 +0300</pubDate>
      
      <guid>http://myhw.ru/about/</guid>
      <description>

&lt;p&gt;Небольшой сайт с заметками о железе.&lt;/p&gt;

&lt;p&gt;Построен на статичном движке &lt;a href=&#34;http://myhw.ru/post/hugo&#34;&gt;Hugo&lt;/a&gt; и размещён на &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github pages&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;другие-проекты&#34;&gt;Другие проекты&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tuxotronic.org&#34;&gt;Открытая электроника&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gowebgo.ru&#34;&gt;Заметки о Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;контакты&#34;&gt;Контакты&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;mail:myhw@tuxotronic.org&#34;&gt;Написать мне&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>